@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject BookKeepingWeb.Data.ApplicationDbContext DbContext

<style>
    /* General Button Styling */
    .btn-auth {
        font-size: 1rem;
        font-weight: bold;
        padding: 8px 16px;
        border-radius: 5px;
        transition: all 0.3s ease-in-out;
    }

    /* Login Button (Dark Theme) */
    .btn-login {
        background-color: #222; /* Dark Grey (Almost Black) */
        color: #ffffff; /* White text */
        border: 2px solid #ff4c4c; /* Red Border */
    }

        .btn-login:hover {
            background-color: #ff4c4c; /* Neon Red Hover */
            color: #000000; /* Black text on hover */
            border: 2px solid #ff4c4c;
        }

    /* Register Button (Red Theme) */
    .btn-register {
        background-color: #ff4c4c; /* Bright Red */
        color: #ffffff; /* White text */
        border: 2px solid #ff4c4c;
    }

        .btn-register:hover {
            background-color: #d32f2f; /* Darker Red */
            border-color: #d32f2f;
            color: #ffffff;
        }
</style>
<ul class="navbar-nav ms-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = UserManager.GetUserId(User);
        var userProfile = DbContext.UserProfiles.FirstOrDefault(u => u.UserId == userId);
        var screenName = userProfile?.ScreenName ?? "User";

        <li class="nav-item">
            <span class="navbar-text me-3">
                &nbsp Hi, @screenName!
            </span>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="btn btn-auth btn-login me-2" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="btn btn-auth btn-register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
    }
</ul>
