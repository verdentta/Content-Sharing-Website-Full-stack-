@model UserProfile
@using BookKeepingWeb.Helpers

<link rel="stylesheet" href="~/css/profileDisplay.css" />

<div id="profile-container">
    @if (TempData["ProfileError"] != null)
    {
            <div class="alert alert-warning text-center">@TempData["ProfileError"]</div>
    }
    @if (TempData["DisplayError"] != null)
    {
            <div class="alert alert-danger text-center">@TempData["DisplayError"]</div>
    }
    <!-- Banner Section -->
    <div class="profile-banner" style="background-image: url('@Model.BackgroundImagePath');">
        <!-- Overlay content -->
        <div class="profile-overlay">
            <!-- Profile Picture Section -->
            <div class="profile-picture-container">
                <img src="@Model.ProfilePicturePath" alt="Profile Picture" class="profile-picture rounded-circle" />
            </div>

            <div class="profile-info-container">
                <div class="profile-details">
                    <h2>@Model.ScreenName</h2>
                    <h4>Country: @Model.Country</h4>
                    <h4>Age: @Model.Age</h4>
                    <p><strong>Description:</strong> @Html.Raw(Model.Description != null ? Model.Description.Replace("\n", "<br>") : "")</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- User Content Section -->
<div class="mt-3">
    <!-- Reduced mt-5 to mt-3 for mobile -->
    <!-- Tabs -->
    <div class="d-flex flex-column flex-md-row justify-content-center gap-2 mb-4">

        @* <a asp-action="Display" asp-route-tab="MyContent" class="btn @(ViewData["ActiveTab"] as string == "MyContent" ? "btn-primary" : "btn-outline-primary")">
            My Content
        </a> 
        <a asp-action="Display" asp-route-tab="Liked" class="btn @(ViewData["ActiveTab"] as string == "Liked" ? "btn-primary" : "btn-outline-primary")">
            Liked
        </a> *@
        <a asp-action="Index" class="btn btn-primary">Edit Profile</a>
    </div> 

    <!-- Content Section -->
    <div class="container">
        <h4 class="liked-heading">👍 Liked Content</h4>
        <div class="row row-cols-1 row-cols-md-4 g-3">
            <!-- Responsive columns -->
            @if (ViewData["UserContent"] is PaginatedList<BookKeepingWeb.Models.UploadContent> paginatedContent && paginatedContent.Any())
            {
                @foreach (var content in paginatedContent)
                {
                            <div class="col">
                                <div class="card mb-4 clickable-content h-100"
                                     onclick="window.location.href='@Url.Action("Details", "Home", new { id = content.Id })'"
                                     style="cursor: pointer;">
                                    <div class="media-container">
                                @switch (content.ContentType)
                                {
                                    case FileType.Image or FileType.Gif:
                                                        <img src="@content.ThumbnailPath" class="card-img-top" alt="@content.Title" loading="lazy"
                                                             style="width: 100%; height: 100%; object-fit: contain; background-color: #333333;" />
                                        break;
                                    case FileType.Video:
                                                        <img src="@content.ThumbnailPath" class="card-img-top"
                                                             alt="@content.Title"
                                                             loading="lazy"
                                                             style="width: 100%; height: 100%; object-fit: contain; background-color: #333333;" />
                                                        <div class="play-button"></div>
                                        break;
                                }
                                    </div>
                                    <div class="card-body text-center d-flex flex-column h-100">
                                        <h5 class="card-title">@content.Title</h5>
                                        <p class="text-muted mt-auto"><small>Uploaded on: @content.CreatedDateTime.ToShortDateString()</small></p>
                                @if (ViewData["ActiveTab"] as string == "MyContent")
                                {
                                                <div class="d-flex justify-content-center">
                                                    <a asp-controller="UploadContent" asp-action="Edit" asp-route-id="@content.Id"
                                                       class="btn btn-warning btn-sm me-2" onclick="event.stopPropagation();"><i class="bi bi-pencil-square"></i> Edit</a>
                                                </div>
                                }
                                    </div>
                                </div>
                            </div>
                }
            }
            else
            {
                    <p class="text-center">LIKE content in order to save it here.</p>
            }
        </div>

        <!-- Pagination Controls -->
        <div class="d-flex justify-content-center mt-4">
            @if (Convert.ToInt32(ViewData["CurrentPage"]) > 1)
            {
                    <a class="btn btn-primary me-2"
                       asp-action="Display"
                       asp-route-tab="@ViewData["ActiveTab"]"
                       asp-route-page="@(Convert.ToInt32(ViewData["CurrentPage"]) - 1)">
                        Previous
                    </a>
            }

            @if (Convert.ToInt32(ViewData["CurrentPage"]) < Convert.ToInt32(ViewData["TotalPages"]))
            {
                    <a class="btn btn-primary"
                       asp-action="Display"
                       asp-route-tab="@ViewData["ActiveTab"]"
                       asp-route-page="@(Convert.ToInt32(ViewData["CurrentPage"]) + 1)">
                        Next
                    </a>
            }
        </div>
    </div>

    @section Scripts {

            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    let lazyImages = document.querySelectorAll("img.lazy-load");

                    if ("IntersectionObserver" in window) {
                        let observer = new IntersectionObserver(function (entries, observer) {
                            entries.forEach(entry => {
                                if (entry.isIntersecting) {
                                    let img = entry.target;
                                    img.src = img.dataset.src;
                                    img.removeAttribute("loading"); // Remove native lazy loading after loading
                                    observer.unobserve(img);
                                }
                            });
                        });

                        lazyImages.forEach(img => {
                            observer.observe(img);
                        });
                    }
                });
            </script>

    }
