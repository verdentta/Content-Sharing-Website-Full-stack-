@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}
<style>
    /* Dark Theme */
    body {
        background-color: #000000; /* Pure black background */
        color: #f8f9fa; /* Light grey text */
        font-family: 'Roboto', sans-serif;
    }

    /* Section Title */
    h1 {
        color: red; /* Red titles */
        font-weight: bold;
    }

    /* Section Title */
    h2, h3 {
        color: #ff4747; /* Red titles */
        text-align: center;
        font-weight: bold;
    }

    /* Input Fields */
    .form-control {
        background-color: #222; /* Dark input fields */
        color: #ffffff;
        border: 1px solid #444;
    }

        .form-control::placeholder {
            color: #bbb;
        }

    /* Remember Me Checkbox */
    .form-check-input {
        background-color: #333; /* Darker checkbox */
        border: 2px solid #ff4747;
    }

        .form-check-input:checked {
            background-color: #ff4747;
        }

    /* Buttons */
    .btn-primary {
        background-color: #ff4747;
        border: none;
        font-weight: bold;
        padding: 12px;
        transition: all 0.3s ease-in-out;
    }

        .btn-primary:hover {
            background-color: #cc0000; /* Darker red on hover */
        }

    /* External Login Buttons */
    .btn-external {
        background-color: #444;
        border: 1px solid #888;
        font-weight: bold;
        transition: all 0.3s ease-in-out;
    }

        .btn-external:hover {
            background-color: #666;
        }

    /* Links */
    a {
        color: #ff4747;
        font-weight: bold;
        transition: all 0.3s ease-in-out;
    }

        a:hover {
            color: #cc0000;
        }
</style>
<div style="height: 20px;"></div> <!-- Adds 20px vertical space -->
<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            
            
            <div class="form-floating mb-3">
                <input asp-for="Input.ScreenName" class="form-control" autocomplete="screename" aria-required="true" placeholder="myusername" />
                <label asp-for="Input.ScreenName">Username</label>
                <span asp-validation-for="Input.ScreenName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Age" class="form-control" autocomplete="age" aria-required="true" placeholder="18" />
                <label asp-for="Input.Age">Age</label>
                <span asp-validation-for="Input.Age" class="text-danger"></span>
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
                <small class="form-text text-warning">
                    Please use a legitimate email. Otherwise, password recovery will not be possible.
                </small>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div>
        <p>
            <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl">Already have an account</a>
        </p>
    </div>
    @* <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div> *@
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const registerForm = document.getElementById("registerForm");
            const screenNameInput = document.querySelector("input[name='Input.ScreenName']");
            const screenNameError = document.querySelector("span[asp-validation-for='Input.ScreenName']");

            registerForm.addEventListener("submit", function (event) {
                // Clear existing errors
                screenNameError.textContent = "";

                // Validate username (no spaces allowed)
                if (screenNameInput.value.includes(" ")) {
                    event.preventDefault(); // Prevent form submission
                    screenNameError.textContent = "Username cannot contain spaces.";
                    screenNameError.classList.add("text-danger");
                    screenNameInput.focus();
                }
            });
        });
    </script>
}
